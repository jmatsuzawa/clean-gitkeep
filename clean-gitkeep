#!/usr/bin/env bash

# Copyright (c) 2023 Jiro Matsuzawa
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

only_check=
dir=.
target_file=.gitkeep
out=/dev/stdout
exit_status=0
print_usage() {
  echo "Usage: $(basename $0): [-c] [-d DIR_NAME] [-f TARGET_FILE] [-h] [-q] args"
}

has_other_files() {
  dir="$1"
  (( $(ls -A "$dir" | wc -l) > 1 ))
}

clean() {
  target_path=$1
  if ! has_other_files $(dirname "$target_path"); then
    return
  fi

  if [[ "$only_check" ]]; then
    echo "$target_path" > "$out"
    exit_status=1
  else
    git rm "$target_path" > "$out"
  fi
}

while getopts 'cd:f:hq' OPTION; do
  case $OPTION in
    c) only_check=1
      ;;
    d) dir="$OPTARG"
      ;;
    f) target_file="$OPTARG"
      ;;
    h) print_usage
      exit 0
      ;;
    q) out=/dev/null
      ;;
    ?) print_usage >&2
      exit 1
      ;;
  esac
done
shift $((OPTIND - 1))

for path in $(find "$dir" -name "$target_file" -type f); do
  clean "$path"
done

exit "$exit_status"
